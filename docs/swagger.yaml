definitions:
  v1.CaptchaResponseData:
    properties:
      CaptchaBase64:
        type: string
      captchaId:
        type: string
    type: object
  v1.CollegeResponseData:
    properties:
      collegeId:
        type: integer
      collegeName:
        type: string
      description:
        type: string
    type: object
  v1.GetCollegeListDataResponse:
    properties:
      collegeList:
        items:
          $ref: '#/definitions/v1.CollegeResponseData'
        type: array
    type: object
  v1.GetCollegeRequest:
    properties:
      collegeId:
        type: integer
    type: object
  v1.GetUserInfoResponseData:
    properties:
      collegeId:
        type: integer
      email:
        type: string
      nickname:
        example: alan
        type: string
      phone:
        example: "10012239028"
        type: string
      roleType:
        example: 0
        type: integer
      studentId:
        type: string
      userId:
        type: string
    type: object
  v1.LoginResponseData:
    properties:
      accessToken:
        type: string
    type: object
  v1.PasswordLoginRequest:
    properties:
      captchaAnswer:
        description: 验证码字段
        type: string
      captchaId:
        description: 验证码ID字段
        type: string
      password:
        example: "123456"
        type: string
      phone:
        example: "10012239028"
        type: string
    required:
    - captchaAnswer
    - captchaId
    - password
    - phone
    type: object
  v1.RegisterRequest:
    properties:
      captchaAnswer:
        description: 验证码字段
        type: string
      captchaId:
        description: 验证码ID字段
        type: string
      password:
        example: "123456"
        type: string
      phone:
        example: "10012239028"
        type: string
    required:
    - captchaAnswer
    - captchaId
    - password
    - phone
    type: object
  v1.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  v1.UpdateProfileRequest:
    properties:
      email:
        example: 1234@gmail.com
        type: string
      nickname:
        example: alan
        type: string
    type: object
  v1.UserAuthRequest:
    properties:
      collegeId:
        type: integer
      remarks:
        type: string
      studentId:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Nunu Example API
  version: 1.0.0
paths:
  /cancel:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Response'
      security:
      - Bearer: []
      summary: 注销用户
      tags:
      - 用户模块
  /getCaptcha:
    get:
      consumes:
      - application/json
      description: 获取验证码生成所需的ID和图片URL
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.CaptchaResponseData'
      summary: 获取验证码
      tags:
      - 用户模块
  /passwordLogin:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.PasswordLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.LoginResponseData'
      summary: 账号密码登录
      tags:
      - 用户模块
  /register:
    post:
      consumes:
      - application/json
      description: 目前只支持邮箱登录
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Response'
      summary: 用户注册
      tags:
      - 用户模块
  /user/getCollege:
    get:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.GetCollegeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.CollegeResponseData'
      security:
      - Bearer: []
      summary: 获取学院信息
      tags:
      - 用户模块
  /user/getCollegeList:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 返回学院信息列表
          schema:
            $ref: '#/definitions/v1.GetCollegeListDataResponse'
      security:
      - Bearer: []
      summary: 获取学院列表
      tags:
      - 用户模块
  /user/getUserInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserInfoResponseData'
      security:
      - Bearer: []
      summary: 获取用户信息
      tags:
      - 用户模块
  /user/logout:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Response'
      security:
      - Bearer: []
      summary: 退出用户
      tags:
      - 用户模块
  /user/updateProfile:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Response'
      security:
      - Bearer: []
      summary: 修改用户信息
      tags:
      - 用户模块
  /user/userAuth:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.UserAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Response'
      security:
      - Bearer: []
      summary: 用户认证
      tags:
      - 用户模块
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
